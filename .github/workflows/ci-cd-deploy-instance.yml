name: Deploy Kestra
on:
  pull_request:
    types:
      - closed
    branches:
      - main
    paths:
      - 'kestra/docker-compose.yaml'

jobs:
  deploy:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    name: Deploy Kestra instance
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Create file .env
        run: |
          echo "KESTRA_USER=${{secrets.KESTRA_USER}}" >> kestra/.env
          echo "KESTRA_PASSWORD=${{secrets.KESTRA_PASSWORD}}" >> kestra/.env
          echo "POSTGRES_DB=${{secrets.POSTGRES_DB}}" >> kestra/.env
          echo "POSTGRES_USER=${{secrets.POSTGRES_USER}}" >> kestra/.env
          echo "POSTGRES_PASSWORD=${{secrets.POSTGRES_PASSWORD}}" >> kestra/.env
          echo "SECRET_CLIENTE_ID=${{secrets.SECRET_CLIENTE_ID_BASE64}}" >> kestra/.env
          echo "SECRET_CLIENTE_SECRET=${{secrets.SECRET_CLIENTE_SECRET_BASE64}}" >> kestra/.env
          echo "SECRET_PROJECT_ID=${{secrets.SECRET_PROJECT_ID_BASE64}}" >> kestra/.env
          echo "SECRET_GCP_CREDENTIALS=${{secrets.SECRET_GCP_CREDENTIALS_BASE64}}" >> kestra/.env

      - name: Show redacted env for debug
        run: |
          grep -E "KESTRA_USER|KESTRA_PASSWORD" kestra/.env | sed 's/=.*/=***REDACTED***/'
          grep -E "POSTGRES_DB|POSTGRES_USER|POSTGRES_PASSWORD" kestra/.env | sed 's/=.*/=***REDACTED***/'
          grep -E "SECRET_CLIENTE_ID|SECRET_CLIENTE_SECRET" kestra/.env | sed 's/=.*/=***REDACTED***/'
          grep -E "SECRET_GCP_CREDENTIALS|SECRET_PROJECT_ID" kestra/.env | sed 's/=.*/=***REDACTED***/'

      - name: Check required env vars
        run: |
          for VAR in KESTRA_USER KESTRA_PASSWORD POSTGRES_DB POSTGRES_USER POSTGRES_PASSWORD SECRET_CLIENTE_ID SECRET_CLIENTE_SECRET SECRET_PROJECT_ID SECRET_GCP_CREDENTIALS; do
            grep -q "^$VAR=" kestra/.env || (echo "$VAR is missing!" && exit 1)
          done
        
      - name: Validate docker-compose config
        run: docker compose --env-file kestra/.env -f kestra/docker-compose.yaml config

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS_JSON }}

      - name: Set up SSH key for GCP
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{secrets.GCP_PROJECT_ID}}
      
      - name: Copy docker-compose.yaml to GCP instance
        run: |
          gcloud compute scp ./kestra/docker-compose.yaml ${{secrets.GCP_INSTANCE_NAME}}:/home/runner/docker-compose.yaml --zone ${{secrets.GCP_ZONE}} --project ${{secrets.GCP_PROJECT_ID}}
          gcloud compute scp ./kestra/.env ${{secrets.GCP_INSTANCE_NAME}}:/home/runner/.env --zone ${{secrets.GCP_ZONE}} --project ${{secrets.GCP_PROJECT_ID}}
          gcloud compute ssh ${{secrets.GCP_INSTANCE_NAME}} --zone ${{secrets.GCP_ZONE}} --project ${{secrets.GCP_PROJECT_ID}} --command "sudo mv /home/runner/docker-compose.yaml /opt/kestra/docker-compose.yaml"
          gcloud compute ssh ${{secrets.GCP_INSTANCE_NAME}} --zone ${{secrets.GCP_ZONE}} --project ${{secrets.GCP_PROJECT_ID}} --command "sudo mv /home/runner/.env /opt/kestra/.env"
          
      - name: Restart Docker Compose on GCP instance
        run: |
          gcloud compute ssh ${{secrets.GCP_INSTANCE_NAME}} --zone ${{secrets.GCP_ZONE}} --project ${{secrets.GCP_PROJECT_ID}} --command "
            cd /opt/kestra
            sudo docker-compose down
            sudo docker-compose up -d
          "

      - name: Run init-prod-kv flow via Kestra API
        run: |
          echo "Esperando a que Kestra esté saludable..."
          for i in {1..10}; do
            if curl -s -u "${{ secrets.KESTRA_USER }}:${{ secrets.KESTRA_PASSWORD }}" http://${{ secrets.KESTRA_HOSTNAME }}:8081/health | grep '"status":"UP"' > /dev/null; then
              echo "Kestra está listo."
              break
            else
              echo "Esperando 10 segundos..."
              sleep 10
            fi
          done

          echo "Verificando si el flujo init-prod-kv existe..."
          status_code=$(curl -s -o /dev/null -w "%{http_code}" -u "${{ secrets.KESTRA_USER }}:${{ secrets.KESTRA_PASSWORD }}" \
            http://${{ secrets.KESTRA_HOSTNAME }}:8080/api/v1/flows/spotify-dwh-insights.prod/init-prod-kv)

          if [ "$status_code" -eq 200 ]; then
            echo "Flujo encontrado. Ejecutando init-prod-kv..."
            curl -v -X POST "http://${{ secrets.KESTRA_HOSTNAME }}:8080/api/v1/executions/spotify-dwh-insights.prod/init-prod-kv" \
              -u "${{ secrets.KESTRA_USER }}:${{ secrets.KESTRA_PASSWORD }}" \
              -H "Content-Type: multipart/form-data"
          else
            echo "Flujo init-prod-kv no encontrado. Saltando ejecución."
          fi
      
      - name: Remove .env file for security
        run: rm -f kestra/.env
